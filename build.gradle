/*
 * Gradle build file for the CRML compiler
 */

plugins {
    id 'application'
 	id 'antlr'
 	id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
 }

 repositories{
 	mavenCentral()
 }

 dependencies {
    antlr "org.antlr:antlr4:4.9.2"
    
    implementation ('org.apache.logging.log4j:log4j-api') {
        version {
            strictly '[2.17.0]'
        }
    }
    implementation ('org.apache.logging.log4j:log4j-core') {
        version {
            strictly '[2.17.0]'
        }
    }
    testImplementation(platform('org.junit:junit-bom:5.9.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'io.github.hakky54:logcaptor:2.7.10'
   
}

/** sourceSets {
    generated {
    	java.srcDirs += 'target/generated-src/antlr/main/'
    }
} */

task(translate, dependsOn: 'classes', type: JavaExec) {
   mainClass = 'crml.translator.Main'
   classpath = sourceSets.main.runtimeClasspath
}

task(parse, dependsOn: 'classes', type: JavaExec) {
   mainClass = 'crml.parser.Main'
   classpath = sourceSets.main.runtimeClasspath
}

application {
    mainClass = 'crml.translator.Main'
}

generateGrammarSource {

    arguments += ["-visitor", "-long-messages", "-Xlog", "-listener",  "-lib", "src/main/antlr/grammar"]

}

test {	
	 useJUnitPlatform()
	 testLogging {
		events "passed", "skipped", "failed"
	}
}

jar {
  manifest {
   attributes 'Main-Class': 'crml.translator.Main'
   attributes 'Multi-Release': 'true'
  }
}

apply plugin: 'java'
compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}