within CRML_test.ETL.DecideOver;
partial block DecideOver

protected
  parameter Integer N=CRML.ETL.Types.nMaxOverlap;

public
  Utilities.Boolean4Connector phi1 "Boolean4 condition" annotation (Placement(
        transformation(extent={{-120,-10},{-100,10}}), iconTransformation(
          extent={{-120,-10},{-100,10}})));
  Utilities.TimeLocatorConnector[N] P1 annotation (Placement(transformation(
          extent={{-10,90},{10,110}}), iconTransformation(extent={{-10,90},{10,
            110}})));
  CRML.ETL.Connectors.Boolean4Output b_decide_over
    annotation (Placement(transformation(extent={{100,-10},{120,10}})));
  CRML.TimeLocators.Attributes.PeriodsEnd periodsEnd
    annotation (Placement(transformation(extent={{-4,-12},{4,-4}})));
  CRML.Blocks.Logical4.Or4 or4_n
    annotation (Placement(transformation(extent={{40,-10},{60,10}})));
  CRML.Blocks.Logical4.BooleanToBoolean4 booleanToBoolean4
    annotation (Placement(transformation(extent={{20,-12},{28,-4}})));
equation
  connect(phi1, or4_n.u1)
    annotation (Line(points={{-110,0},{-40,0},{-40,8},{39,8}}, color={0,0,0}));
  connect(P1, periodsEnd.tl)
    annotation (Line(points={{0,100},{0,-4}}, color={0,0,0}));
  connect(periodsEnd.y, booleanToBoolean4.u)
    annotation (Line(points={{4.4,-8},{19.6,-8}}, color={217,67,180}));
  connect(or4_n.u2, booleanToBoolean4.y)
    annotation (Line(points={{39,-8},{28.4,-8}}, color={162,29,33}));
  connect(or4_n.y, b_decide_over)
    annotation (Line(points={{61,0},{110,0}}, color={162,29,33}));
//         Text(
//           extent={{-74,32},{74,-36}},
//           lineColor={0,0,0},
//           fillColor={28,108,200},
//           fillPattern=FillPattern.Solid,
//           textString=boxName),
  annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                         Rectangle(
          extent={{-100,100},{100,-100}},
          fillColor={162,29,33},
          lineThickness=5,
          fillPattern=FillPattern.Solid,
          borderPattern=BorderPattern.Raised,
          lineColor={0,0,0}),
        Rectangle(
          extent={{-78,80},{82,-80}},
          lineColor={175,175,175},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Text(
          extent={{-70,72},{70,44}},
          lineColor={28,108,200},
          textString="decide"),
        Text(
          extent={{-70,18},{70,-10}},
          lineColor={28,108,200},
          textString="over")}),                               Diagram(
        coordinateSystem(preserveAspectRatio=false)),
    Documentation(info="<html>
<p><b><span style=\"font-family: MS Shell Dlg 2;\">Syntax</span></b> </p>
<blockquote><b>y</b> = <b>CheckAtEnd </b>(<b>u</b> = condition, <b>tl</b> = time_period, <b>checkAtEnd</b>); </blockquote>
<p><b><span style=\"font-family: MS Shell Dlg 2;\">Description</span></b> </p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Each instance of this block creates a requirement that evaluates whether the condition <b>u</b> is satisfied (true) at the end of the time period <b>tl</b> (which can be a continuous or discrete time period). The condition is a <a href=\"modelica://CRML.ETL.Types.Boolean4\">Boolean4</a> that takes its values in the { true, false, undecided, undefined } set.</span></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">To create time locators, refer to the <a href=\"modelica://CRML.ETL.TimeLocators.Periods\">Periods</a> block.</span></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">The value of a requirement is a <a href=\"modelica://CRML.ETL.Types.Boolean4\">Boolean4</a> that can be used as input of another Ensure block. It is therefore possible to express requirements on requirements.</span></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Requirements can be combined using <a href=\"modelica://CRML.ETL.Types.Boolean4\">Boolean4</a> operators, refer to the <a href=\"modelica://CRML.Blocks.Logical4\">Logical4</a> package.</span></p>
<p>The condition <b>u</b> can be generated by converting Boolean signals to Boolean4 signals with the block <a href=\"modelica://CRML.Blocks.Logical4.BooleanToBoolean4\">BooleanToBoolean4</a>, or by using the output y of another <a href=\"modelica://CRML.ETL.Requirements.Check\">Check</a>, <a href=\"modelica://CRML.ETL.Requirements.CheckInteger\">CheckInteger</a> or <a href=\"modelica://CRML.ETL.Requirements.CheckReal\">CheckReal</a> block.</p>
<p><br><b><span style=\"font-family: MS Shell Dlg 2;\">Example</span></b> </p>
<p><span style=\"font-family: MS Shell Dlg 2;\">This block is demonstrated with the following <a href=\"modelica://ReqSysPro.Examples.TimeLocators.Continuous.After\">example</a>:</span></p>
</html>"));
end DecideOver;
